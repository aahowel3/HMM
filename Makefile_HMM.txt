# path to main folders 
#2017 includes descendant GE and MAs as well as the SB210 nonGEd ancestor

#need this for the location in the fastq_files rule
#2017_FASTQ := /storage/datasets/Tetrahymena_thermophila/2017-04-17/fastq

#not this one
ANCES_FASTQ := /storage/datasets/Tetrahymena_thermophila/ancestor_ges/fastq
##Junkjukn
#remove paths 
#REMOVE_2017_bad := /storage/datasets/Tetrahymena_thermophila/2017-04-17/fastq/bad
#2017s = $(shell find $(2017_FASTQ) -type d -path $(REMOVE_2017_FASTQC) -prune -o -name '*L001_R1_001.fastq' -print)

#2017s = $(shell find /storage/datasets/Tetrahymena_thermophila/2017-04-17/fastq -type d \( -path /storage/datasets/Tetrahymena_thermophila/2017-04-17/fastq/bad -o -path /storage/datasets/Tetrahymena_thermophila/2017-04-17/fastq/fastqc \) -prune -o -name '*L001_R1_001.fastq*' -print) 
#ANC_GES = $(shell find $(ANCES_FASTQ) -name '*L001_R1*' -print)
#SAMPLES = $(2017s) $(ANC_GES)

#ANC_R1_FASTQS = $(notdir $(subst _L001_R1_001.fastq,_anc_R1.fastq,$(ANC_GES)))
#ANC_R2_FASTQS = $(notdir $(subst _L001_R1_001.fastq,_anc_R2.fastq,$(ANC_GES)))

#R1_FASTQS = $(notdir $(subst _L001_R1_001.fastq,_R1.fastq,$(2017s)))
#R2_FASTQS = $(notdir $(subst _L001_R1_001.fastq,_R2.fastq,$(2017s)))

ALL_FASTQS = $(shell find /work/aahowel3/DNG_calls/ -name '*_R1*' -print)

#check its printing what you think its printing 
.PHONY : variables
variables:
	echo $(ALL_FASTQS)
#	$(foreach V, $(SAMPLES), echo "${V}") 
################################################################################
# combine lanes
#.PHONY: fastq_files
#fastq_files: $(ALL_FASTQS)

#%_R1.fastq:
#	$(eval $@_fastqs := $(shell find $(2017_FASTQ)/$*_L00{1,2,3,4}_R1_001.fastq))
#	cat $($@_fastqs) > $@

#%_R2.fastq:
#	$(eval $@_fastqs := $(shell find $(2017_FASTQ)/$*_L00{1,2,3,4}_R2_001.fastq))
#	cat $($@_fastqs) > $@

#%_anc_R1.fastq:
#	$(eval $@_fastqs := $(shell find $(ANCES_FASTQ)/**/$*_L00{1,2,3,4}_R1_001.fastq))
#	cat $($@_fastqs) > $@

#%_anc_R2.fastq:
#	$(eval $@_fastqs := $(shell find $(ANCES_FASTQ)/**/$*_L00{1,2,3,4}_R2_001.fastq))
#	cat $($@_fastqs) > $@

################################################################################
# alignment
REF = /storage/reference_genomes/tetrahymena_thermophila/mic/mic.genome.fasta
SAMS = $(notdir $(subst _R1.fastq,.sam, $(ALL_FASTQS)))

#tester
#SAMS = A12GE2_S14.sam

.PHONY: sam_files

sam_files: $(SAMS)

%.sam: ../DNG_calls/%_R1.fastq ../DNG_calls/%_R2.fastq $(REF)
	$(eval $@_FLOWCELL := $(shell head -n1 ../DNG_calls/$*_R1.fastq | cut -d ":" -f3))
	bwa mem -R "@RG\tID:$($@_FLOWCELL)\tSM:$*\tLB:$*\tPU:$($@_FLOWCELL)\tPL:illumina" $(REF) ../DNG_calls/$*_R1.fastq ../DNG_calls/$*_R2.fastq > $@

################################################################################
# convert sam to bam, sort, and index bam
BAMS = $(subst .sam,_sorted_rmdup_mapped.bam,$(SAMS))
SAMTOOLS = samtools

#BAMS = A12GE2_S14_sorted_rmdup_mapped.bam

.PHONY: bam_files

bam_files: $(BAMS)

%_init.bam: %.sam
	$(SAMTOOLS) view -S -b $< > $@

%_sorted.bam: %_init.bam
	$(SAMTOOLS) sort -o $@ $<

%_sorted_rmdup.bam: %_sorted.bam
	$(SAMTOOLS) rmdup $< $@

%_sorted_rmdup_mapped.bam: %_sorted_rmdup.bam
	$(SAMTOOLS) view -b -h -F 4 $< > $@

.PHONY: index
INDEX_LIST = $(addsuffix .bai, $(basename $(shell ls *.bam)))
index: $(INDEX_LIST)
%.bai: %.bam
	samtools index $<

#make coverage files for HMM
COVERAGE = $(subst .sam,_coverage.txt,$(SAMS))

#tester
#COVERAGE = A12GE2_S14_coverage.txt

.PHONY: coverage_files

coverage_files: $(COVERAGE)

%_coverage.txt: %_sorted_rmdup_mapped.bam
	samtools depth -a -d 0 $< > $@
